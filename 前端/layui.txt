# 表单
	# 表单赋值与取值
	# 表单验证与定义
# 模板引擎


	
表单

	事件监听
		语法：form.on('event(过滤器值)', callback);
		event: 可选值【select，checkbox，switch(监听checkbox复选框开关事件)，radio，submit】
		过滤器值: 如lay-filter="test" 此处过滤器值为test
		callback：
			中的参数data分析
				data.elem 			//得到select原始DOM对象
				data.value 			//得到被选中的值
				data.othis 			//得到美化后的DOM对象	
					othis.innerHTML		返回原始html内容
					othis.outerHTML		经过layui编译后的代码
					othis.textContent	返回所有选项值拼接的字符串
				data.elem.checked 	//是否被选中，true或者false checkbox时调用 
				以下两个是针对submit事件
				data.form 			//被执行提交的form对象，一般在存在form标签时才会返回
				data.field 			//当前容器的全部表单字段，名值对形式：{name: value}	
			callback中的返回值分析
				只有在submit事件需要返回值
				return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
	表单赋值与取值
		语法：form.val('filter', object);
		例：赋值
			form.val("formTest", { //formTest 即 class="layui-form" 所在元素属性 lay-filter="" 对应的值
			  "username": "贤心" // "name": "value"
			  ,"sex": "女"
			  ,"auth": 3
			  ,"check[write]": true
			  ,"open": false
			  ,"desc": "我爱layui"
			});
		例：获取
			var data1 = form.val("formTest");
	表单验证与定义
		例：使用验证
			<input type="text" lay-verify="required|phone|number">
		例：定义验证
			form.verify({
			  username: function(value, item){ //value：表单的值、item：表单的DOM对象
				if(!new RegExp("^[a-zA-Z0-9_\u4e00-\u9fa5\\s·]+$").test(value)){
				  return '用户名不能有特殊字符';
				}
				if(/(^\_)|(\__)|(\_+$)/.test(value)){
				  return '用户名首尾不能出现下划线\'_\'';
				}
				if(/^\d+\d+\d$/.test(value)){
				  return '用户名不能全为数字';
				}
			  }
			  //我们既支持上述函数式的方式，也支持下述数组的形式
			  //数组的两个值分别代表：[正则匹配、匹配不符时的提示文字]
			  ,pass: [
				/^[\S]{6,12}$/
				,'密码必须6到12位，且不能出现空格'
			  ] 
			});
			
			
模板引擎
	<script type="text/html" template="" lay-url="{{ layui.setter.base }}json/message/detail.js?id={{ layui.router().search.id }}">