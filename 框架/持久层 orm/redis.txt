目录
	#学习过程#
	#简介#
	#基本数据结构#
	#redis优势#
	#Redis与其他key-value存储有什么不同？#
	#缓存#
	
#学习过程#
	书籍资料/Redis入门指南 第2版.pdf 
	redis的优势
	redis运行流程
	redis基本操作
	redis的基本用途，应用场景
	掌握redis
		实现队列
		事务
		复制
		管道
		持久化
		优化redis存储空间
#简介#
	》REmote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。
	》是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、
	》》Key-Value数据库，并提供多种语言的API。
	
	》是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。
	三个特点：
	》Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。
	》Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。
	》Redis支持数据的备份，即master-slave模式的数据备份。
	
#基本数据结构#
	》String：字符串
	》Hash：散列
	》List：列表
	》Set：集合
	》Sorted Set：有序集合

#redis优势#
	》性能极高
		Redis能读的速度是110000次/s,写的速度是81000次/s 。
	》丰富的数据类型 
		Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。
	》原子
		Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。
		多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。
	》丰富的特性 
		Redis还支持 publish/subscribe, 通知, key 过期等等特性。
	
#Redis与其他key-value存储有什么不同？#
	》1、Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。
	》》Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。
	》2、Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，
	》》因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，
	》》在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。同时，
	》》在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。
	
	
#缓存#
	304 没有变化 走了缓存
	缓存架构
		应用层 
			浏览器			
			缓存解决：浏览器缓存、本地缓存 
			缓存技术：HTTP缓存协商
		网络层 
			网络路由
			缓存解决：CDN
			缓存技术：Squid
		负载层 
			Nginx、Apache
			缓存解决：动静分离方向代理缓存（图片缓存服务器）
			缓存技术：基于http服务器
		服务层 
			java应用
			缓存解决：
				动态页面静态化
				应用缓存
				分布式缓存
				Mybatis缓存
			缓存技术：
				freemarker、velocity、theamleaf
				ehcache、guava、jodd
				redis、memcache
				mybatis一二级缓存
		数据库 
			oracle、mysql
			缓存解决：数据库
			缓存技术：缓冲区（buffer pool）
	应用缓存和分布式缓存的对比
	
	分布式比数据库提升了10倍
	本地比分布式提升了50倍
	本地应用缓存
		guava caffeine（轻量级 最牛逼，在spring5中为默认缓存） ehcache（重量级 hibernete默认使用）
		jdk：1.6 1.8 1.5
		界面：无 无 有
	分布式缓存
		redis memcached
		redis是可以完全取代memcached的，
		redis不仅有键值数据类型还有list、set、map
		redis内存突破物理内存的大小
		redis支持持久化
		redis支持事务，而不是用锁来保证事务的一致性
	spring cache 
		总结：起到解耦（传统的工具类辅助操作缓存使得代码耦合在一起，如果哪天不用缓存了或者换工具类，那得删改代码），
			提高复用（一个注解，各种缓存框架都适用）
		通过注解去操作缓存 
		具体：
			类添加一个注解
			设置 @CachePut(key="#cacheOrder.id", value="cacheOrder")
			获取 @Cacheable(key="#id", value="cacheOrder")
			删除 @CacheEvict(key="#id", value="cacheOrder")
		原理：aop