目录：
	#简单词汇的解释#
	#两种框架的区别#
	#两个框架各自的优势#
	#两个框架的相同点#
	#两大框架总结#
	#Hibernate#
	#MyBatis#
#简单词汇的解释#：
	ORM - Object Relational Mapping 对象关联映射
	
#Hibernate#
	简介：	
		是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，
		是一个全自动的orm框架，hibernate可以自动生成SQL语句，自动执行，
		使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。
	核心API Configuration SqlSessionFactory Session Transaction
		Configuration config = new Configuration() ;
		config.configure("配置文件") ;
		SessionFactory sf  = config.buildSessionFactory() ;	
		Session session  = sf.openSession() ;
		Transaction tx = session.beginTransaction() ;
#MyBatis#
	简介：	
		是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。
	核心API SqlSessionFactory SqlSessionFactoryBuilder SqlSession 
		SqlSessionFactory sessionFactory = new SqlSessionFactoryBuilder().build(new InputStream()) ;
		SqlSession session  = sessionFactory.openSession() ;

#两种框架的区别#：
	1、开发速度的对比
		Hibernate的真正掌握要比Mybatis来得难些。Mybatis框架相对简单很容易上手，但也相对简陋些
		对于简单的增删改查，这样选择hibernate效率就很快了。
		复杂语句较多，使用MyBatis
	2、开发工作量的对比
		Mybatis需要手动编写SQL语句，以及ResultMap。
		Hibernate有良好的映射机制，开发者无需关心SQL的生成与结果映射，可以更专注于业务流程。
	3、sql优化方面	
		Hibernate的查询会将表中的所有字段查询出来，这一点会有性能消耗。
		Hibernate也可以自己写SQL来指定需要查询的字段，但这样就破坏了Hibernate开发的简洁性。
		而Mybatis的SQL是手动编写的，所以可以按需求指定查询的字段。
	4、对象管理的对比
		Hibernate是完整的对象/关系映射，采用了更自然的面向对象的视角来持久化 Java 应用中的数据。
		MyBatis用户自己需要对对象进行详细的管理。
	5、缓存机制
		Hibernate更好的二级缓存，缓存时如果出现脏数据，系统会报出错误并提示
		MyBatis二级缓存机制不佳
	6、移植性
		hibernate拥有完整的对象关系映射和hql语言，大大的降低了对象与数据库的耦合性，
		而mybatis需要手动的写sql语句，遇到不同的数据库可能需要更改sql语句来适配当前数据库。
	7、日志系统
		hibernate日志系统非常健全，涉及广泛，包括：sql记录、关系异常、优化警告、缓存提示、脏数据警告等;
		mybatis则除了基本记录功能外，功能薄弱很多。
	
#两个框架各自的优势#：
	Mybatis优势
		MyBatis可以进行更为细致的SQL优化，可以减少查询字段。
		MyBatis容易掌握，而Hibernate门槛较高。
	Hibernate优势
		Hibernate的dao层开发比MyBatis简单，MyBatis需要维护SQL和结果映射
		Hibernate对对象的维护和缓存要比MyBatis好，对增删查改的对象的维护要方便。
		Hibernate数据库移植很好，MyBatis的数据库移植性不好，不同的数据库需要写不同的SQL
		Hibernate有更好的二级缓存机制，可以使用第三方缓存。MyBatis本身提供的缓存机制不佳。
		
		
#两个框架的相同点#：
	Hibernate与MyBatis都可以是通过SessionFactoryBuider由XML配置文件生成SessionFactory，
	然后由SessionFactory 生成Session，最后由Session来开启执行事务和SQL语句。
	其中SessionFactoryBuider，SessionFactory，Session的生命周期都是差不多的。
	Hibernate和MyBatis都支持JDBC和JTA事务处理。
	
#两大框架总结#：
	*Hibernate功能强大，数据库无关性好，O/R映射能力强，如果你对Hibernate相当精通，而且对Hibernate进行了适当的封装，
	那么你的项目整个持久层代码会相当简单，需要写的代码很少，开发速度很快，非常爽。
	*Hibernate的缺点就是学习门槛不低，要精通门槛更高，而且怎么设计O/R映射，在性能和对象模型之间如何权衡取得平衡
	以及怎样用好Hibernate方面需要你的经验和能力都很强才行。
	*iBATIS入门简单，即学即用，提供了数据库查询的自动对象绑定功能，而且延续了很好的SQL使用经验，
	对于没有那么高的对象模型要求的项目来说，相当完美。
	*iBATIS的缺点就是框架还是比较简陋，功能尚有缺失，虽然简化了数据绑定代码，
	但是整个底层数据库查询实际还是要自己写的，工作量也比较大，而且不太容易适应快速数据库修改。